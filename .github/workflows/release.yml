name: Build and Release

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
    branches: [main, "release/*"]

permissions:
  contents: write
  packages: write

jobs:
  goreleaser:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/v')
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/v')
        with:
          name: binaries
          path: dist/*
          compression-level: 9
          retention-days: 5

  publish-homebrew:
    needs: goreleaser
    name: Update Homebrew Formula
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: dist

      - name: Calculate checksums
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

          # Calculate SHA256 checksums
          echo "SHA256_INTEL=$(sha256sum dist/migraine_darwin_amd64_v1/migraine | awk '{print $1}')" >> $GITHUB_ENV
          echo "SHA256_ARM=$(sha256sum dist/migraine_darwin_arm64/migraine | awk '{print $1}')" >> $GITHUB_ENV

      - name: Update Homebrew formula
        env:
          HOMEBREW_TAP_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
        run: |
          # Clone the Homebrew tap repository
          git clone https://$HOMEBREW_TAP_TOKEN@github.com/tesh254/homebrew-migraine.git
          cd homebrew-migraine

          # Update the formula
          cat > migraine.rb << EOL
          class Migraine < Formula
            desc "A robust CLI tool used to organize and automate complex workflows with templated commands"
            homepage "https://github.com/tesh254/migraine"
            version "${VERSION#v}"

            on_macos do
              if Hardware::CPU.intel?
                url "https://github.com/tesh254/migraine/releases/download/${VERSION}/migraine_darwin_amd64_v1.tar.gz"
                sha256 "$SHA256_INTEL"
              else
                url "https://github.com/tesh254/migraine/releases/download/${VERSION}/migraine_darwin_arm64.tar.gz"
                sha256 "$SHA256_ARM"
              end
            end

            def install
              bin.install "migraine"
              # Create the mig alias
              bin.install_symlink "migraine" => "mig"
            end

            test do
              system "#{bin}/migraine", "--version"
              system "#{bin}/mig", "--version"
            end
          end
          EOL

          # Commit and push the changes
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add migraine.rb
          git commit -m "Update migraine to ${VERSION}"
          git push

  publish-npm:
    needs: goreleaser
    name: Publish to npm
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: Update package version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          npm version $VERSION --no-git-tag-version

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
